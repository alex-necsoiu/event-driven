version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: users
    ports:
      - "5432:5432"
    volumes:
      - ./docker/migrate.sql:/docker-entrypoint-initdb.d/migrate.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.10-alpine
    ports:
      - "4222:4222"
    healthcheck:
      test: ["CMD", "nats-server", "--help"]
      interval: 5s
      timeout: 5s
      retries: 5

  user:
    build:
      context: .
      dockerfile: cmd/user/Dockerfile
    env_file:
      - configs/user.env.example
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    restart: on-failure

  order:
    build:
      context: .
      dockerfile: cmd/order/Dockerfile
    env_file:
      - configs/order.env.example
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    restart: on-failure

  notification:
    build:
      context: .
      dockerfile: cmd/notification/Dockerfile
    env_file:
      - configs/notification.env.example
    depends_on:
      nats:
        condition: service_healthy
    restart: on-failure

  gateway:
    build:
      context: .
      dockerfile: cmd/gateway/Dockerfile
    env_file:
      - configs/gateway.env.example
    ports:
      - "8080:8080"
    depends_on:
      user:
        condition: service_started
      order:
        condition: service_started
    restart: on-failure

# To extend: add more services, brokers, or override configs as needed. 